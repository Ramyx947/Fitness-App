# --------------------------------------
# Docker Compose configuration for the develop branch.
# Used for development builds and testing, with real-time code updates.
# Overrides default configuration settings to suit the development environment.
# --------------------------------------
version: '3.8'
services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - NODE_ENV=development
        REACT_APP_ACTIVITY_URL=http://activity-tracking:5300
        REACT_APP_ANALYTICS_URL=http://analytics:5050
        REACT_APP_RECIPES_URL=http://recipes:5051
        REACT_APP_AUTHSERVICE_URL=http://localhost:8080
    ports:
      - "3000:80"
    volumes:  # Mounts local directories into the container for real-time code updates (no need to refresh to see changes)
      - ./frontend/build:/app/build
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontend:/app
    networks:
      - app-network
    depends_on:
      - activity-tracking
      - analytics
      - recipes
      - authservice

  activity-tracking:
    build:
      context: ./activity-tracking
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - MONGO_URI=${MONGO_URI}
      - MONGO_DB=${MONGO_DB_ACTIVITY}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./activity-tracking:/app
    ports:
      - "5300:5300"
    healthcheck:
      test: ["CMD", "true"]
      interval: 10s
      retries: 5

  analytics:
    build:
      context: ./analytics
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - NODE_ENV=${NODE_ENV}
      - MONGO_URI=${MONGO_URI}
      - MONGO_DB=${MONGO_DB_ANALYTICS}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./analytics:/app
    ports:
      - "5050:5050"
    healthcheck:
      test: ["CMD", "true"]
      interval: 30s
      timeout: 10s
      retries: 5

  recipes:
    build:
      context: ./recipes
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - NODE_ENV=${NODE_ENV}
      - MONGO_URI=${MONGO_URI}
      - MONGO_DB=${MONGO_DB_RECIPES}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./recipes:/app
    ports:
    - "7000:7000"
    healthcheck:
      test: ["CMD", "true"]
      interval: 30s
      timeout: 10s
      retries: 5

  authservice:
    build:
      context: ./authservice
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
    - SPRING_DATA_MONGODB_DATABASE=${MONGO_DB_AUTHSERVICE}
    - SPRING_DATA_MONGODB_URI=${MONGO_URI}
    ports:
      - "8080:8080"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "true"]
      interval: 30s
      timeout: 10s
      retries: 5

  mongodb:
    image: mongo:latest
    env_file:
      - .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=cfgmla23
      - MONGO_URI=mongodb://root:cfgmla23@mongodb:27017
    volumes:
      - mongodbdata:/data/db
    healthcheck:
      test: ["CMD", "echo", "MongoDB is healthy!"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

networks:
  app-network:
    driver: bridge # all services using app-network communicate over a bridge network

volumes:
  mongodbdata:
  activity-tracking-data:
  analytics-data:
  recipes-data:
  authservice-data:
