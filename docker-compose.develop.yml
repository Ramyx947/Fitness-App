services:
  frontend:
    environment:
    - NODE_ENV=${NODE_ENV_DEV}
    ports:
      - "3000:80"
    ## volumes added for data persistency(caching, logging, session data, authentication tokens)
    ## using bind mounts: allows real-time code updates
    volumes: 
      - ./frontend:/app

  activity-tracking:
    environment:
      - NODE_ENV=${NODE_ENV_DEV}
      - MONGO_DB=${MONGO_DB_DEV}
      - MONGO_URI=${MONGO_URI_DEV}
    volumes:
      - ./activity-tracking:/app
  analytics:
    environment:
    - NODE_ENV=${NODE_ENV_DEV}
    - MONGO_DB=${MONGO_DB_DEV}
    - MONGO_URI=${MONGO_URI_DEV}
    volumes:
      - ./analytics:/app

  authservice:
    environment:
      - SPRING_DATA_MONGODB_DATABASE=${SPRING_DATA_MONGODB_DATABASE_DEV}
      - SPRING_DATA_MONGODB_URI=${MONGO_URI_DEV}
    volumes:
      - ./authservice:/app
  
  mongodb:
    volumes:
      - mongodbdata_develop:/data/db
    environment:
    - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
    - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
## All database data (e.g., user accounts, activity tracking data, analytics data)
## will be stored in /data/db. 
## If the MongoDB container crashes or restarts, the database will remain intact because the data is stored in the mongodbdata volume.
volumes:
  mongodbdata_develop:
    driver: local