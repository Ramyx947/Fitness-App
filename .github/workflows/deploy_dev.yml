# ––––––––––––––––––––––––––––––––
# This workflow builds and pushes Docker images to Docker Hub.
# It runs automatically when there is a push to the develop branch.
# Docker images are built and pushed only for services that have changes in their directories.
# It also checks commit messages for the service's name to determine if the service needs rebuilding.
# Ensure that DOCKER_USERNAME and DOCKER_PASSWORD are added to GitHub secrets for authentication.
# ––––––––––––––––––––––––––––––––
## run units tests! 
name: DEV - Build and deploy Fitness App

on:
  push:
    branches: 
      - develop
  pull_request:
    types: [opened, reopened]
    branches: [develop]

jobs:
  build:
    name: Build and deploy
    env:
      ENVIRONMENT: dev
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [frontend, activity-tracking, analytics, authservice, mongodb]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set environment variables
        run: |
          echo "NODE_ENV_DEV=${{ secrets.NODE_ENV_DEV }}" >> $GITHUB_ENV
          echo "MONGO_DB_DEV=${{ secrets.MONGO_DB_DEV }}" >> $GITHUB_ENV
          echo "MONGO_URI_DEV=${{ secrets.MONGO_URI_DEV }}" >> $GITHUB_ENV
          echo "SPRING_DATA_MONGODB_DATABASE_DEV=${{ secrets.SPRING_DATA_MONGODB_DATABASE_DEV }}" >> $GITHUB_ENV
          echo "MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_INITDB_ROOT_USERNAME }}" >> $GITHUB_ENV
          echo "MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}" >> $GITHUB_ENV

      - name: Run Docker Compose
        run: docker-compose -f docker-compose.yml -f docker-compose.develop.yml up -d
        env:
          NODE_ENV_DEV: ${{ secrets.NODE_ENV_DEV }}
          MONGO_DB_DEV: ${{ secrets.MONGO_DB_DEV }}
          MONGO_URI_DEV: ${{ secrets.MONGO_URI_DEV }}
          SPRING_DATA_MONGODB_DATABASE_DEV: ${{ secrets.SPRING_DATA_MONGODB_DATABASE_DEV }}
          MONGO_INITDB_ROOT_USERNAME: ${{ secrets.MONGO_INITDB_ROOT_USERNAME }}
          MONGO_INITDB_ROOT_PASSWORD: ${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.service }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image for ${{ matrix.service }}
        run: docker-compose -f docker-compose.yml -f docker-compose.develop.yml build ${{ matrix.service }}

      - name: Push Docker image to Docker Hub
        run: docker-compose -f docker-compose.yml -f docker-compose.develop.yml push ${{ matrix.service }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build, tag, and push image to Docker Hub (Frontend)
        if: contains(github.event.head_commit.message, 'frontend') || steps.check_outputs.changed == 'frontend'
        run: |
          cd frontend
          docker build -t ${{ secrets.DOCKER_USERNAME }}/mla-fitnessapp-fe:latest -f Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/mla-fitnessapp-fe:latest

      - name: Build, tag, and push image to Docker Hub (Activity Tracking)
        if: contains(github.event.head_commit.message, 'activity-tracking') || steps.check_outputs.changed == 'activity-tracking'
        run: |
          cd activity-tracking
          docker build -t ${{ secrets.DOCKER_USERNAME }}/mla-fitnessapp-activity:latest -f Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/mla-fitnessapp-activity:latest

      - name: Build, tag, and push image to Docker Hub (AuthService)
        if: contains(github.event.head_commit.message, 'authservice') || steps.check_outputs.changed == 'authservice'
        run: |
          cd authservice
          docker build -t ${{ secrets.DOCKER_USERNAME }}/mla-fitnessapp-authservice:latest -f Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/mla-fitnessapp-authservice:latest

      - name: Build, tag, and push image to Docker Hub (Analytics)
        if: contains(github.event.head_commit.message, 'analytics') || steps.check_outputs.changed == 'analytics'
        run: |
          cd analytics
          docker build -t ${{ secrets.DOCKER_USERNAME }}/mla-fitnessapp-analytics:latest -f Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/mla-fitnessapp-analytics:latest
